{"version":3,"sources":["components/GroceryListForm.jsx","components/GroceryListItem.jsx","components/GroceryList.jsx","components/GroceryApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["GroceryListForm","addItem","useState","value","setValue","handleAddClick","e","preventDefault","onSubmit","className","maxLength","placeholder","type","onChange","event","target","onKeyPress","keyCode","GroceryListItem","id","name","removeItem","completed","checkItemDone","remove","handleCheck","onClick","color","GroceryList","items","map","item","index","GroceryApp","quantity","setItems","newItems","filter","console","log","sort","a","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed837ff9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../GroceryListForm.css\";\n\nfunction GroceryListForm({ addItem }) {\n  //state for inputvalue that is a new grocery item\n  const [value, setValue] = useState(\"\");\n  // update state based on input change\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n  //gets the current value from state\n  function handleAddClick(e) {\n    if (value !== \"\") {\n      addItem(value);\n      setValue(\"\");\n    }\n\n    e.preventDefault();\n  }\n\n  function handleKeypress(e) {\n    if (e.keyCode === 13) {\n      handleAddClick();\n    }\n  }\n\n  return (\n    <form onSubmit={handleAddClick} className=\"GroceryListForm\">\n      <input\n        maxLength=\"18\"\n        placeholder=\"New item...\"\n        type=\"text\"\n        onChange={handleChange}\n        value={value}\n        onKeyPress={handleKeypress}\n      ></input>\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n}\n\nexport default GroceryListForm;\n","import React from \"react\";\nimport \"../GroceryListItem.css\";\n\nfunction GroceryListItem({ id, name, removeItem, completed, checkItemDone }) {\n  function remove() {\n    removeItem(id);\n  }\n\n  // function add() {\n  //   const newQuantity = quantity + 1;\n  //   updateQuantity(id, newQuantity);\n  // }\n\n  // function subtract() {\n  //   const newQuantity = quantity - 1;\n  //   updateQuantity(id, newQuantity);\n  // }\n\n  function handleCheck() {\n    checkItemDone(id);\n  }\n\n  return (\n    <div className=\"GroceryListItem\">\n      {completed ? (\n        <li className=\"GroceryListItem-completed\">\n          <box-icon\n            onClick={handleCheck}\n            name=\"check-circle\"\n            type=\"solid\"\n            color=\"#ffffff\"\n          ></box-icon>\n          {name}\n          <button className=\"GroceryListItem-rm-btn\" onClick={remove}>\n            <box-icon name=\"trash\"></box-icon>\n          </button>\n        </li>\n      ) : (\n        <li>\n          <box-icon\n            onClick={handleCheck}\n            name=\"circle\"\n            type=\"solid\"\n            color=\"#ffffff\"\n          ></box-icon>\n          {name}\n          <button className=\"GroceryListItem-rm-btn\" onClick={remove}>\n            <box-icon name=\"trash\"></box-icon>\n          </button>\n        </li>\n      )}\n    </div>\n  );\n}\n\nexport default GroceryListItem;\n","import React from \"react\";\nimport GroceryListItem from \"./GroceryListItem\";\nimport \"../GroceryList.css\";\n\nfunction GroceryList({ items, removeItem, checkItemDone }) {\n  // const totalItems = items.reduce((total, item) => total + item.quantity, 0);\n\n  return (\n    <div className=\"GroceryList\">\n      {items.map((item, index) => {\n        return (\n          <GroceryListItem\n            key={index}\n            name={item.name}\n            completed={item.completed}\n            removeItem={removeItem}\n            checkItemDone={checkItemDone}\n            {...item}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default GroceryList;\n","import React, { useState } from \"react\";\nimport GroceryListForm from \"./GroceryListForm\";\nimport GroceryList from \"./GroceryList\";\nimport \"../GroceryApp.css\";\n\nfunction GroceryApp() {\n  const initialItems = [\n    { name: \"bananas\", completed: false, quantity: 3, id: 1 },\n    { name: \"chicken\", completed: false, quantity: 1, id: 2 },\n    { name: \"milk\", completed: true, quantity: 2, id: 3 },\n  ];\n  const [items, setItems] = useState(initialItems);\n\n  function addItem(value) {\n    let newItem = {\n      name: value,\n      completed: false,\n      quantity: 1,\n    };\n    let newItems = [newItem, ...items];\n    newItems.map((item, index) => {\n      return (item.id = index);\n    });\n    setItems(newItems);\n  }\n\n  function removeItem(id) {\n    const newItems = items.filter((item) => {\n      return item.id !== id;\n    });\n    setItems(newItems);\n  }\n\n  // function updateQuantity(id, newQuantity) {\n  //   const newItems = items.map((item) => {\n  //     if (item.id === id) {\n  //       return { ...item, quantity: newQuantity };\n  //     } else {\n  //       return item;\n  //     }\n  //   });\n  //   setItems(newItems);\n  // }\n\n  function checkItemDone(id) {\n    const newItems = items.map((item) => {\n      if (item.id === id) {\n        console.log(item.completed);\n        if (!item.completed) {\n          return { ...item, completed: true };\n        } else {\n          return { ...item, completed: false };\n        }\n      } else {\n        return item;\n      }\n    });\n\n    newItems.sort(function (a, b) {\n      return a.completed - b.completed;\n    });\n    setItems(newItems);\n  }\n\n  return (\n    <div className=\"GroceryApp\">\n      <h2 className=\"GroceryApp-title\">Grocery List</h2>\n      <div className=\"GroceryApp-form\">\n        <GroceryListForm addItem={addItem} />\n      </div>\n      <div className=\"GroceryApp-list\">\n        <GroceryList\n          items={items}\n          removeItem={removeItem}\n          checkItemDone={checkItemDone}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default GroceryApp;\n","import React from \"react\";\nimport GroceryApp from \"./components/GroceryApp\";\nimport \"boxicons\";\n\nfunction App() {\n  return (\n    <>\n      <h1>React Grocery List App</h1>\n      <div>\n        <GroceryApp />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}